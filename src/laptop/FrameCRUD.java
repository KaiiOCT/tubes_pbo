/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package laptop;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

/**
 * @author Faris Rizky R
 */
public class FrameCRUD extends javax.swing.JFrame {

    /**
     * Creates new form FrameCRUD
     */
    private ManageLaptop manageLaptop;
    private final DefaultTableModel model = new DefaultTableModel(new Object[]{"ID", "Nama Laptop", "Kategori Prosesor", "Deskripsi", "Harga Sewa", "Status"}, 0);
    private int selectedLaptopId = 0;


    public FrameCRUD() {

        initComponents();
        KategoriLaptop();
        KategoriStatus();

        // Set model dan disable kolom ID
        TableLaptop.setModel(model);
        TableLaptop.getColumnModel().getColumn(0).setMinWidth(0);
        TableLaptop.getColumnModel().getColumn(0).setMaxWidth(0);
        TableLaptop.getColumnModel().getColumn(0).setWidth(0);

        ReadLaptop();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableLaptop = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        labelcrud = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelDeskripsi = new javax.swing.JLabel();
        labelKategori = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FormNamaLaptop = new javax.swing.JTextField();
        KategoriBox = new javax.swing.JComboBox<>();
        labelHargaSewa = new javax.swing.JLabel();
        labelStatus = new javax.swing.JLabel();
        FormHargaSewa = new javax.swing.JTextField();
        FormStatus = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        FormDeskripsi = new javax.swing.JTextArea();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        FormSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnTransaksi = new javax.swing.JButton();
        FilterLaptopBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        TableLaptop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nama", "Kategori Prosesor", "Deskripsi", "Harga Sewa", "Status"
            }
        ));
        TableLaptop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableLaptopMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableLaptop);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        labelcrud.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelcrud.setText("Laptopers");

        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 0, 0));
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelcrud)
                .addGap(249, 249, 249)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogout)
                    .addComponent(labelcrud))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        labelDeskripsi.setText("Deskripsi :");

        labelKategori.setText("Kategori :");

        jLabel1.setText("Nama Laptop :");

        KategoriBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KategoriBoxActionPerformed(evt);
            }
        });

        labelHargaSewa.setText("Harga Sewa :");

        labelStatus.setText("Status :");

        FormHargaSewa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormHargaSewaActionPerformed(evt);
            }
        });

        FormStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormStatusActionPerformed(evt);
            }
        });

        FormDeskripsi.setColumns(20);
        FormDeskripsi.setRows(5);
        FormDeskripsi.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                FormDeskripsiAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(FormDeskripsi);

        btnCreate.setForeground(new java.awt.Color(153, 153, 255));
        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/material-symbols_add.png"))); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setForeground(new java.awt.Color(204, 204, 0));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/material-symbols_edit-sharp.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setForeground(new java.awt.Color(255, 51, 51));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/material-symbols_delete-sharp.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        FormSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormSearchActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/ri_search-line.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnTransaksi.setText("Transaksi");
        btnTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaksiActionPerformed(evt);
            }
        });

        FilterLaptopBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterLaptopBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete))
                            .addComponent(btnTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(FormSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch))
                            .addComponent(FilterLaptopBox, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(labelDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(labelKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(KategoriBox, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FormNamaLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelHargaSewa, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FormStatus, 0, 150, Short.MAX_VALUE)
                                    .addComponent(FormHargaSewa))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FormNamaLaptop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHargaSewa)
                    .addComponent(FormHargaSewa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelKategori)
                    .addComponent(KategoriBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelStatus)
                    .addComponent(FormStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDeskripsi)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(FormSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FilterLaptopBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTransaksi))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        try {
            String nama = FormNamaLaptop.getText();
            int kategori = KategoriBox.getSelectedIndex();
            String deskripsi = FormDeskripsi.getText();
            int hargaSewa = Integer.parseInt(FormHargaSewa.getText());
            int status = FormStatus.getSelectedIndex();

            if (kategori == 0) {
                JOptionPane.showMessageDialog(this, "Kategori harus diisi.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {

                manageLaptop = new ManageLaptop(0, nama, kategori, deskripsi, hargaSewa, status);

                if (manageLaptop.insertLaptop()) {
                    model.setRowCount(0);  // Menghapus semua baris dari model
                    ReadLaptop();  // Memuat ulang data laptop ke dalam tabel
                    JOptionPane.showMessageDialog(this, "Laptop berhasil disimpan!", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menyimpan laptop.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan laptop: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void FilterLaptopBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterLaptopBoxActionPerformed
        String selectedCategory = (String) FilterLaptopBox.getSelectedItem();
        System.out.println(FilterLaptopBox.getSelectedItem());
        if (selectedCategory.equals("Pilih Kategori")) {
            ReadLaptop();
        } else {
            model.setRowCount(0); // Hapus semua data dari tabel
            try {
                Connection conn = new Koneksi().getConnection();
                String query = "SELECT l.id, l.nama, k.kategori_prosesor, l.deskripsi, l.harga_sewa, p.status_sewa FROM laptop l JOIN kategori k ON l.prosesor = k.id JOIN penyewaan p ON l.status = p.id WHERE k.kategori_prosesor = ? ORDER BY l.id DESC";
                PreparedStatement ps = conn.prepareStatement(query);
                ps.setString(1, selectedCategory);

                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    int idLaptop = rs.getInt("id");
                    String namaLaptop = rs.getString("nama");
                    String kategoriOS = rs.getString("kategori_prosesor");
                    String deskripsi = rs.getString("deskripsi");
                    int hargaSewa = rs.getInt("harga_sewa");
                    String status = rs.getString("status_sewa");
                    model.addRow(new Object[]{idLaptop, namaLaptop, kategoriOS, deskripsi, hargaSewa, status});
                }
                conn.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Gagal memfilter laptop: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_FilterLaptopBoxActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        manageLaptop.setId(selectedLaptopId);

        if (manageLaptop.deleteLaptop()) {
            model.setRowCount(0);  // Menghapus semua baris dari model
            ReadLaptop();  // Memuat ulang data laptop ke dalam tabel
            JOptionPane.showMessageDialog(this, "Laptop berhasil dihapus.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menghapus laptop.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void TableLaptopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableLaptopMouseClicked
        int row = TableLaptop.getSelectedRow();
        System.out.println(row);
        Object selectedLaptopIdObject = TableLaptop.getValueAt(row, 0);
        selectedLaptopId = (int) selectedLaptopIdObject;
        String namaLaptop = (String) TableLaptop.getValueAt(row, 1); // Nama Laptop
        String kateogriProsesor = (String) TableLaptop.getValueAt(row, 2); // Kategori OS
        String deskripsi = (String) TableLaptop.getValueAt(row, 3); // Deskripsi
        int hargaSewa = (int) TableLaptop.getValueAt(row, 4); // Harga Sewa
        String status = (String) TableLaptop.getValueAt(row, 5); // Status

        // Tampilkan data ke form
        FormNamaLaptop.setText(namaLaptop);
        KategoriBox.setSelectedItem(kateogriProsesor);
        FormDeskripsi.setText(deskripsi);
        FormHargaSewa.setText(String.valueOf(hargaSewa));
        FormStatus.setSelectedItem(status);
        System.out.println("ID Laptop yang dipilih: " + selectedLaptopIdObject);

    }//GEN-LAST:event_TableLaptopMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            // Ambil data dari form
            String namaLaptop = FormNamaLaptop.getText();
            int kategoriIndex = KategoriBox.getSelectedIndex();
            String deskripsi = FormDeskripsi.getText();
            int hargaSewa = Integer.parseInt(FormHargaSewa.getText());
            int status = FormStatus.getSelectedIndex();

            // Validasi input
            if (selectedLaptopId == 0) {
                JOptionPane.showMessageDialog(this, "Pilih laptop yang akan diperbarui.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (kategoriIndex == 0 || namaLaptop.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nama laptop dan kategori harus diisi.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Update data laptop
            manageLaptop = new ManageLaptop (selectedLaptopId, namaLaptop, kategoriIndex, deskripsi, hargaSewa, status);

            if (manageLaptop.updateLaptop()) {
                model.setRowCount(0);
                ReadLaptop();
                JOptionPane.showMessageDialog(this, "Laptop berhasil diperbarui.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Gagal memperbarui laptop.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui laptop: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void FormSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormSearchActionPerformed

    }//GEN-LAST:event_FormSearchActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Menangkap nilai pencarian dari FormSearch
        String searchLaptop = FormSearch.getText();

        try {
            model.setRowCount(0); // Hapus semua data dari tabel
            Connection conn = new Koneksi().getConnection();

            // Query untuk pencarian berdasarkan nama laptop
            String query = "SELECT l.id, l.nama, k.kategori_prosesor, l.deskripsi, l.harga_sewa, p.status_sewa FROM laptop l JOIN kategori k ON l.prosesor = k.id JOIN penyewaan p ON l.status = p.id WHERE l.nama LIKE ? ORDER BY l.id DESC";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setString(1, "%" + searchLaptop + "%");

            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                int idLaptop = rs.getInt("id");
                String namaLaptop = rs.getString("nama");
                String kategoriProsesor = rs.getString("kategori_prosesor");
                String deskripsi = rs.getString("deskripsi");
                int hargaSewa = rs.getInt("harga_sewa");
                String status = rs.getString("status_sewa");
                model.addRow(new Object[]{idLaptop, namaLaptop, kategoriProsesor, deskripsi, hargaSewa, status});
            }

            conn.close();
        } catch (SQLException e) {
           JOptionPane.showMessageDialog(this, "Gagal mencari laptop: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void FormHargaSewaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormHargaSewaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormHargaSewaActionPerformed

    private void FormDeskripsiAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_FormDeskripsiAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_FormDeskripsiAncestorAdded

    private void FormStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FormStatusActionPerformed

    private void KategoriBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KategoriBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KategoriBoxActionPerformed

    private void btnTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaksiActionPerformed
        this.dispose();
        FrameTransaksi frameTransaksi = new FrameTransaksi();
        frameTransaksi.setSize(600, 800); // Atur ukuran frameTransaksi (lebar: 800px, tinggi: 600px)
        frameTransaksi.setLocationRelativeTo(null); // Mengatur frameTransaksi muncul di tengah layar
        frameTransaksi.setVisible(true);
    }//GEN-LAST:event_btnTransaksiActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        this.dispose();
        FrameLogin frameLogin = new FrameLogin();
        frameLogin.setSize(800, 400); // Atur ukuran frameLogin (lebar: 800px, tinggi: 600px)
        frameLogin.setLocationRelativeTo(null); // Mengatur frameLogin muncul di tengah layar
        frameLogin.setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed


    private void ReadLaptop() {
        try {
            Connection conn = new Koneksi().getConnection();
            String query = "SELECT l.id, l.nama, k.kategori_prosesor, l.deskripsi, l.harga_sewa, p.status_sewa FROM laptop l JOIN kategori k ON l.prosesor = k.id JOIN penyewaan p ON l.status = p.id ORDER BY l.id DESC";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            model.setRowCount(0); // Hapus semua data dari tabel

            while (rs.next()) {
                int idLaptop = rs.getInt("id");
                String namaLaptop = rs.getString("nama");
                String kategoriOS = rs.getString("kategori_prosesor");
                String deskripsi = rs.getString("deskripsi");
                int hargaSewa = rs.getInt("harga_sewa");
                String status = rs.getString("status_sewa");
                model.addRow(new Object[]{idLaptop, namaLaptop, kategoriOS, deskripsi, hargaSewa, status});
            }
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data laptop: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void KategoriLaptop() {
        KategoriBox.removeAllItems();
        KategoriBox.addItem("Pilih Kategori");
        FilterLaptopBox.addItem("Pilih Kategori");

        try {
            Connection conn = new Koneksi().getConnection();
            String query = "SELECT kategori_prosesor FROM kategori";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                KategoriBox.addItem(rs.getString("kategori_prosesor"));
                FilterLaptopBox.addItem(rs.getString("kategori_prosesor"));
            }

            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat kategori: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void KategoriStatus() {
        FormStatus.removeAllItems();
        FormStatus.addItem("Pilih Status");

        try {
            Connection conn = new Koneksi().getConnection();
            String query = "SELECT status_sewa FROM penyewaan";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                FormStatus.addItem(rs.getString("status_sewa"));
            }

            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat status: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameCRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrameCRUD frame = new FrameCRUD();
                frame.setSize(820, 800); // Atur ukuran frame (lebar: 800px, tinggi: 600px)
                frame.setLocationRelativeTo(null); // Mengatur frame muncul di tengah layar
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FilterLaptopBox;
    private javax.swing.JTextArea FormDeskripsi;
    private javax.swing.JTextField FormHargaSewa;
    private javax.swing.JTextField FormNamaLaptop;
    private javax.swing.JTextField FormSearch;
    private javax.swing.JComboBox<String> FormStatus;
    private javax.swing.JComboBox<String> KategoriBox;
    private javax.swing.JTable TableLaptop;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTransaksi;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDeskripsi;
    private javax.swing.JLabel labelHargaSewa;
    private javax.swing.JLabel labelKategori;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JLabel labelcrud;
    // End of variables declaration//GEN-END:variables
}
